N_pop1=20
(inds.pop1<-paste("Ind", seq(1:N_pop1), sep=""))
(alleles<-c("A", "a"))
# We'll now use the function "sample" to assign allele A or a. You can see what this function does by checking it's help information:
?sample
## Considering alleles A and a, randomly assign alleles for each of the 20 inds.
(allele1.pop1<-sample(alleles, N_pop1, replace=T))
## Since inds are 2n, let's also assign them a second allele:
(allele2.pop1<-sample(alleles, N_pop1, replace=T))
# Now create the population:
# Because genotypes are the combination of the two alleles at a locus, the genotype of each ind is:
(genotypes.pop1<-paste(allele1.pop1, allele2.pop1, sep=""))
# visualize:
(pop1<-data.frame(Id=inds.pop1, Allele1=allele1.pop1, Allele2=allele2.pop1, Genotype=genotypes.pop1))
# Homozygote recessive:
(homres_pop1<-length(which(pop1$Genotype=="aa"))/N_pop1)
# Homozygote dominant:
(homdom_pop1<-length(which(pop1$Genotype=="AA"))/N_pop1)
# Heterozygote:
(het_pop1<-(length(which(pop1$Genotype=="Aa"))+length(which(pop1$Genotype=="aA")))/N_pop1)
# Total:
homres_pop1+homdom_pop1+het_pop1
### Allelic frequencies:
# Total number of alleles:
(totalalleles_pop1<-length(pop1$Allele1)+length(pop1$Allele2))
(totalres_pop1<-length(which(pop1$Allele1=="a"))+length(which(pop1$Allele2=="a")))
(totaldom_pop1<-length(which(pop1$Allele1=="A"))+length(which(pop1$Allele2=="A")))
(freqres_pop1<-totalres_pop1/totalalleles_pop1)
(freqdom_pop1<-totaldom_pop1/totalalleles_pop1)
# Total:
freqres_pop1+freqdom_pop1
mypops<-function(N){
alleles<-c("A", "a")
allele1<-sample(alleles, N, replace=T)
allele2<-sample(alleles, N, replace=T)
allelic.freqA<-(length(which(allele1=="A"))+length(which(allele2=="A")))/(2*N)
allelic.freqa<-(length(which(allele1=="a"))+length(which(allele2=="a")))/(2*N)
genotypes<-paste(allele1, allele2, sep="")
homres<-length(which(genotypes=="aa"))/N
homdom<-length(which(genotypes=="AA"))/N
het<-(length(which(genotypes=="Aa"))+length(which(genotypes=="aA")))/N
return(c(allelic.freqa, allelic.freqA,homres, homdom, het))
}
### Look at the output for a population of 20 individuals:
mypops(20)
# Let's now look at 1000 simulated populations of 20 individuals. First, let's create an empty data frame with one row per population and one column per information saved.
mycols<-c("Pop", "FreqA", "Freqa", "Freqaa", "FreqAA", "FreqAa")
my1000popsN20<-data.frame(array(data=NA, dim=c(1000, length(mycols))))
colnames(my1000popsN20)<-mycols
my1000popsN20$Pop<-seq(1:1000)
# You can see the first rows of this data frame by calling:
head(my1000popsN20)
# Now, let's create a loop to simulate 1000 pop:
for(i in 1:1000){
my1000popsN20[i,2:6]<-mypops(20)}
# Take a look at the first rows of the data frame again:
head(my1000popsN20)
### Now, let's visualize the 1000 populations with a few plots:
## Allelic frequencies:
par(mfrow=c(1,2))
hist(my1000popsN20$FreqA, main="Frequency of A")
hist(my1000popsN20$Freqa, main="Frequency of a")
## Genotypic frequencies:
par(mfrow=c(1,3))
hist(my1000popsN20$FreqAA, main="Frequency of AA")
hist(my1000popsN20$FreqAa, main="Frequency of Aa")
hist(my1000popsN20$Freqaa, main="Frequency of aa")
### Let's also estimate some basic statistics for the allele frequency of the A allele for these populations:
## Mean:
mean(my1000popsN20$FreqA)
## Standard deviation:
sd(my1000popsN20$FreqA)
## Range:
range(my1000popsN20$FreqA)
## Per quantile:
summary(my1000popsN20$FreqA)
# Repeating for N = 2000 instead of N = 20, still using 1000 simulatons
my1000popsN2000<-data.frame(array(data=NA, dim=c(1000, length(mycols))))
colnames(my1000popsN2000)<-mycols
my1000popsN2000$Pop<-seq(1:1000)
# You can see the first rows of this data frame by calling:
head(my1000popsN2000)
# Now, let's create a loop to simulate 1000 pop:
for(i in 1:1000){
my1000popsN2000[i,2:6]<-mypops(2000)}
# Take a look at the first rows of the data frame again:
head(my1000popsN2000)
### Now, let's visualize the 1000 populations with a few plots:
## Allelic frequencies:
par(mfrow=c(1,2))
hist(my1000popsN2000$FreqA, main="Frequency of A")
hist(my1000popsN2000$Freqa, main="Frequency of a")
## Genotypic frequencies:
par(mfrow=c(1,3))
hist(my1000popsN2000$FreqAA, main="Frequency of AA")
hist(my1000popsN2000$FreqAa, main="Frequency of Aa")
hist(my1000popsN2000$Freqaa, main="Frequency of aa")
### Let's also estimate some basic statistics for the allele frequency of the A allele for these populations:
## Mean:
mean(my1000popsN2000$FreqA)
## Standard deviation:
sd(my1000popsN2000$FreqA)
## Range:
range(my1000popsN2000$FreqA)
## Per quantile:
summary(my1000popsN2000$FreqA)
?range
# Let's now look at 1000 simulated populations of 20 individuals. First, let's create an empty data frame with one row per population and one column per information saved.
mycols<-c("Pop", "FreqA", "Freqa", "Freqaa", "FreqAA", "FreqAa")
my1000popsN20<-data.frame(array(data=NA, dim=c(1000, length(mycols))))
colnames(my1000popsN20)<-mycols
my1000popsN20$Pop<-seq(1:1000)
# You can see the first rows of this data frame by calling:
head(my1000popsN20)
# Now, let's create a loop to simulate 1000 pop:
for(i in 1:1000){
my1000popsN20[i,2:6]<-mypops(20)}
# Take a look at the first rows of the data frame again:
head(my1000popsN20)
### Now, let's visualize the 1000 populations with a few plots:
## Allelic frequencies:
par(mfrow=c(1,2))
hist(my1000popsN20$FreqA, main="Frequency of A")
hist(my1000popsN20$Freqa, main="Frequency of a")
## Genotypic frequencies:
par(mfrow=c(1,3))
hist(my1000popsN20$FreqAA, main="Frequency of AA")
hist(my1000popsN20$FreqAa, main="Frequency of Aa")
hist(my1000popsN20$Freqaa, main="Frequency of aa")
### Let's also estimate some basic statistics for the allele frequency of the A allele for these populations:
## Mean:
mean(my1000popsN20$FreqA)
## Standard deviation:
sd(my1000popsN20$FreqA)
## Range:
range(my1000popsN20$FreqA)
## Range:
range(my1000popsN2000$FreqA)
## Standard deviation:
sd(my1000popsN2000$FreqA)
## Standard deviation:
sd(my1000popsN20$FreqA)
### Let's also estimate some basic statistics for the allele frequency of the A allele for these populations:
## Mean:
mean(my1000popsN20$FreqA)
### Let's also estimate some basic statistics for the allele frequency of the A allele for these populations:
## Mean:
mean(my1000popsN2000$FreqA)
wh <- c(1384, 1032)
## I think the offset is 18, not 20 because
file.info("Helgeland_01_2018_QC.raw")$size/2 - 18
#[1] 1428288
prod(wh)
s <- readBin("Helgeland_01_2018_QC.raw", what = "integer")
setwd("C:/Users/gard_/OneDrive/Documents/Master Thesis/Project thesis/Data")
wh <- c(1384, 1032)
## I think the offset is 18, not 20 because
file.info("Helgeland_01_2018_QC.raw")$size/2 - 18
#[1] 1428288
prod(wh)
s <- readBin("Helgeland_01_2018_QC.raw", what = "integer")
v <- readBin("Helgeland_01_2018_QC.raw", what = "integer",
n = prod(wh) + 18, size = 2,
signed = TRUE, endian = "little")
v <- v[-(1:18)]  ## drop the offset bytes
## check the values
range(v)
#> [1]  233 4095
## seems readable in this orientation
image(matrix(s, wh[1], wh[2])[wh[1]:1,])
## check the values
# range(v)
#> [1]  233 4095
## seems readable in this orientation
image(matrix(s, wh[1], wh[2])[wh[1]:1,], useRaster = TRUE, col = grey.colors(256))
v <- readBin("Helgeland_01_2018_QC.raw", what = "integer",
n = prod(wh) + 18, size = 2,
signed = TRUE, endian = "little")
v <- v[-(1:18)]  ## drop the offset bytes
image(matrix(v, wh[1], wh[2])[wh[1]:1,], useRaster = TRUE, col = grey.colors(256))
install.packages("Matrix")
library(Matrix)
?Matrix
packageVersion("Matrix")
help("Matrix")
sessionInfo()
install.packages("Matrix", dependencies = TRUE, update = TRUE)
install.packages("Matrix", dependencies = TRUE, update = TRUE)
sessionInfo()
library(Matrix)
sessionInfo()
remove.packages("Matrix")
remove.packages(Matrix)
remove.packages?
remove.packages("Matrix", lib="C:/Program Files/R/R-4.2.1/library")
remove.packages("Matrix", lib="C:/Program Files/R/R-4.2.1/library")
?Matrix
install.packages("Matrix", dependencies = TRUE)
install.packages("Matrix", dependencies = TRUE)
library(Matrix)
sessionInfo()
sessionInfo()
